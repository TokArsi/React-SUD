{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsen\\\\Documents\\\\DataBase\\\\Valorant\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst element = document.getElementById('scrollable-element');\nelement.addEventListener('scroll', function (e) {\n  const scrollTop = element.scrollTop;\n  const scrollHeight = element.scrollHeight;\n  const height = element.clientHeight;\n  const scrollPercentage = scrollTop / (scrollHeight - height) * 100;\n\n  // Обновляем стили скроллбара в зависимости от положения скролла\n  document.documentElement.style.setProperty('--scroll-percentage', scrollPercentage + '%');\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","element","document","getElementById","addEventListener","e","scrollTop","scrollHeight","height","clientHeight","scrollPercentage","documentElement","style","setProperty","root","createRoot","render"],"sources":["C:/Users/Arsen/Documents/DataBase/Valorant/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst element = document.getElementById('scrollable-element');\n\nelement.addEventListener('scroll', function(e) {\n    const scrollTop = element.scrollTop;\n    const scrollHeight = element.scrollHeight;\n    const height = element.clientHeight;\n    const scrollPercentage = (scrollTop / (scrollHeight - height)) * 100;\n\n    // Обновляем стили скроллбара в зависимости от положения скролла\n    document.documentElement.style.setProperty('--scroll-percentage', scrollPercentage + '%');\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC;AAEhD,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;AAE7DF,OAAO,CAACG,gBAAgB,CAAC,QAAQ,EAAE,UAASC,CAAC,EAAE;EAC3C,MAAMC,SAAS,GAAGL,OAAO,CAACK,SAAS;EACnC,MAAMC,YAAY,GAAGN,OAAO,CAACM,YAAY;EACzC,MAAMC,MAAM,GAAGP,OAAO,CAACQ,YAAY;EACnC,MAAMC,gBAAgB,GAAIJ,SAAS,IAAIC,YAAY,GAAGC,MAAM,CAAC,GAAI,GAAG;;EAEpE;EACAN,QAAQ,CAACS,eAAe,CAACC,KAAK,CAACC,WAAW,CAAC,qBAAqB,EAAEH,gBAAgB,GAAG,GAAG,CAAC;AAC7F,CAAC,CAAC;AACF,MAAMI,IAAI,GAAGhB,QAAQ,CAACiB,UAAU,CAACb,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEW,IAAI,CAACE,MAAM,eACT,QAAC,KAAK,CAAC,UAAU;EAAA,uBACf,QAAC,GAAG;IAAA;IAAA;IAAA;EAAA;AAAG;EAAA;EAAA;EAAA;AAAA,QACU,CACpB;;AAED;AACA;AACA;AACAhB,eAAe,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}