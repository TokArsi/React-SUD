{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arsen\\\\Documents\\\\DataBase\\\\Valorant\\\\frontend\\\\src\\\\components\\\\StatusBoard\\\\StatusBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './statusboard.scss';\nimport { Modal } from \"../Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatusBoard = props => {\n  _s();\n  const [namesOfColumns, setNamesOfColumns] = useState([]);\n  const [data, setData] = useState([]);\n  const [modalActive, setModalActive] = useState(false);\n  const [inputValues, setInputValues] = useState({});\n  let arrayOfInputsValue = {};\n  console.log(\"use: \", inputValues);\n  useEffect(() => {\n    fetch('http://localhost:3002/board-titles').then(res => res.json()).then(name => setNamesOfColumns(name));\n    fetch(\"http://localhost:3002/board-data\").then(res => res.json()).then(data => setData(data));\n  }, []);\n  const makeArrayOfInputs = (id, v) => {\n    Object.entries(arrayOfInputsValue).forEach(_ref => {\n      let [key, value] = _ref;\n      if (key === id) {\n        value = v;\n      } else Object.defineProperty(arrayOfInputsValue, id, v);\n    });\n    return arrayOfInputsValue;\n  };\n  const requestToServer = inputValues => {\n    fetch('http://localhost:3002/post-request', {\n      method: \"POST\",\n      body: JSON.stringify(inputValues)\n    }).then(response => response.json());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status-board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-board-tools\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tools\",\n        children: props.dataOfTools.map((img_link, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/img/${img_link}`,\n            alt: \"lol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-logo\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map((_ref2, index) => {\n                let {\n                  ellipse,\n                  img_link\n                } = _ref2;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"checkbox\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 67\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"border-box\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"ellipse\",\n                        src: ellipse,\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 65,\n                        columnNumber: 41\n                      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                        className: \"picture\",\n                        src: img_link,\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 66,\n                        columnNumber: 41\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 41\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 37\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 33\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-data\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: namesOfColumns.map((_ref3, index) => {\n                  let {\n                    title,\n                    vector\n                  } = _ref3;\n                  return /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"column-name\",\n                    children: [title, /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"vector\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: vector,\n                        alt: \"\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 66\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 41\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 37\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map((_ref4, index) => {\n                let {\n                  company,\n                  position,\n                  duration,\n                  job_id,\n                  status\n                } = _ref4;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    id: \"table-data\",\n                    children: company\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    id: \"table-data\",\n                    children: position\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    id: \"table-data\",\n                    children: duration\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    id: \"table-data\",\n                    children: job_id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    id: \"table-data\",\n                    children: status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 41\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"points\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: data.map((_ref5, index) => {\n                let {\n                  points\n                } = _ref5;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    id: \"table-points\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: points,\n                      alt: \"\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 41\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setModalActive(true),\n      children: \"Add new data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      active: modalActive,\n      setActive: setModalActive,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closeBox\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cancel-button\",\n            onClick: () => setModalActive(false),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/img/closebox.png\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ellipse\",\n              children: \"Ellipse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"ellipse\",\n              type: \"text\",\n              onChange: e => {\n                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"img_link\",\n              children: \"Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"img_link\",\n              type: \"text\",\n              onChange: e => {\n                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"company\",\n              children: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"company\",\n              type: \"text\",\n              onChange: e => {\n                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"position\",\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"position\",\n              type: \"text\",\n              onChange: e => {\n                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"duration\",\n              children: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"duration\",\n              type: \"text\",\n              onChange: e => {\n                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"job_id\",\n              children: \"Job_id#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"job_id\",\n              type: \"text\",\n              onChange: e => {\n                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"status\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"status\",\n              type: \"text\",\n              onChange: e => {\n                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"points\",\n              children: \"Points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"points\",\n              type: \"text\",\n              onChange: e => {\n                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: requestToServer,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setModalActive(false),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(StatusBoard, \"GxzYgQD9QBNRPmIWB3wW1vjGt3Y=\");\n_c = StatusBoard;\nexport default StatusBoard;\nvar _c;\n$RefreshReg$(_c, \"StatusBoard\");","map":{"version":3,"names":["React","useState","useEffect","Modal","StatusBoard","props","namesOfColumns","setNamesOfColumns","data","setData","modalActive","setModalActive","inputValues","setInputValues","arrayOfInputsValue","console","log","fetch","then","res","json","name","makeArrayOfInputs","id","v","Object","entries","forEach","key","value","defineProperty","requestToServer","method","body","JSON","stringify","response","title","dataOfTools","map","img_link","index","ellipse","vector","company","position","duration","job_id","status","points","e","currentTarget"],"sources":["C:/Users/Arsen/Documents/DataBase/Valorant/frontend/src/components/StatusBoard/StatusBoard.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './statusboard.scss'\r\nimport {Modal} from \"../Modal/Modal\";\r\n\r\n\r\nconst StatusBoard = (props) => {\r\n\r\n    const [namesOfColumns, setNamesOfColumns] = useState([]);\r\n    const [data, setData] = useState([]);\r\n    const [modalActive, setModalActive]  = useState(false);\r\n    const [inputValues, setInputValues] = useState({});\r\n    let arrayOfInputsValue = {};\r\n    console.log(\"use: \",inputValues)\r\n\r\n    useEffect(() => {\r\n       fetch('http://localhost:3002/board-titles')\r\n           .then((res) => res.json())\r\n           .then((name) => setNamesOfColumns(name))\r\n       fetch(\"http://localhost:3002/board-data\")\r\n           .then((res) => res.json())\r\n           .then((data) => setData(data))\r\n   }, [])\r\n    const makeArrayOfInputs = (id, v) => {\r\n        Object.entries(arrayOfInputsValue).forEach(([key, value]) => {\r\n            if(key === id)\r\n            {\r\n                value = v;\r\n            }\r\n            else Object.defineProperty(arrayOfInputsValue, id, v);\r\n        })\r\n        return arrayOfInputsValue\r\n        }\r\n\r\n    const requestToServer = (inputValues) => {\r\n        fetch('http://localhost:3002/post-request', {\r\n            method: \"POST\",\r\n            body: JSON.stringify(inputValues)})\r\n            .then((response) => response.json())\r\n            }\r\n\r\n\r\n    return (\r\n        <div className=\"status-board\">\r\n            <div className=\"status-board-tools\">\r\n                <div className=\"title\">{props.title}</div>\r\n                <div className=\"tools\">\r\n                    {\r\n                        props.dataOfTools.map((img_link,index) => (\r\n                            <div key={index} className=\"tool\">\r\n                                <img src={`/img/${img_link}`} alt=\"lol\"/>\r\n                            </div>\r\n                        )\r\n                )}\r\n                </div>\r\n            </div>\r\n            <div className=\"table\">\r\n                <div className=\"table-columns\">\r\n                    <div className=\"table-logo\">\r\n                        <table>\r\n                            <tbody>\r\n                            {data.map(({ellipse, img_link}, index) => (\r\n                                <tr key={index}>\r\n                                    <td><div className=\"checkbox\"><input type=\"checkbox\"/></div></td>\r\n                                    <td><div className=\"border-box\">\r\n                                        <img className=\"ellipse\" src={ellipse} alt=\"\"/>\r\n                                        <img className=\"picture\" src={img_link} alt=\"\"/>\r\n                                    </div></td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"table-data\">\r\n                        <table>\r\n                            <thead>\r\n                            <tr>\r\n                                {namesOfColumns.map(({title, vector},index) => (\r\n                                    <th className=\"column-name\" key={index}>{title}\r\n                                        <span className=\"vector\"><img src={vector} alt=\"\"/></span>\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {data.map(({company, position, duration, job_id, status},index) => (\r\n                                    <tr key={index}>\r\n                                        <td id=\"table-data\">{company}</td>\r\n                                        <td id=\"table-data\">{position}</td>\r\n                                        <td id=\"table-data\">{duration}</td>\r\n                                        <td id=\"table-data\">{job_id}</td>\r\n                                        <td id=\"table-data\">{status}</td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"points\">\r\n                        <table>\r\n                            <tbody>\r\n                                {data.map(({points}, index) => (\r\n                                    <tr key={index}>\r\n                                        <td id=\"table-points\">\r\n                                            <img src={points} alt=\"\"/>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button onClick={() => setModalActive(true)}>Add new data</button>\r\n            <Modal active={modalActive} setActive={setModalActive}>\r\n                <div className=\"container\">\r\n                    <div className=\"closeBox\">\r\n                        <div className=\"cancel-button\" onClick={() => setModalActive(false)}>\r\n                            <img src=\"/img/closebox.png\" alt=\"\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <div className=\"inputs\">\r\n                            <label htmlFor=\"ellipse\">Ellipse</label>\r\n                            <input id = \"ellipse\" type=\"text\" onChange={(e) =>{\r\n                                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\r\n                            }\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"inputs\">\r\n                            <label htmlFor=\"img_link\">Logo</label>\r\n                            <input id = \"img_link\" type=\"text\" onChange={(e) =>{\r\n                                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\r\n                            }\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"inputs\">\r\n                            <label htmlFor=\"company\">Company</label>\r\n                            <input id = \"company\" type=\"text\" onChange={(e) =>{\r\n                                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\r\n                            }\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"inputs\">\r\n                            <label htmlFor=\"position\">Position</label>\r\n                            <input id = \"position\" type=\"text\" onChange={(e) =>{\r\n                                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\r\n                            }}/>\r\n                        </div>\r\n                        <div className=\"inputs\">\r\n                            <label htmlFor=\"duration\">Duration</label>\r\n                            <input id = \"duration\" type=\"text\" onChange={(e) =>{\r\n                                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\r\n                            }}/>\r\n                        </div>\r\n                        <div className=\"inputs\">\r\n                            <label htmlFor=\"job_id\">Job_id#</label>\r\n                            <input id = \"job_id\" type=\"text\" onChange={(e) =>{\r\n                                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\r\n                            }}/>\r\n                        </div>\r\n                        <div className=\"inputs\">\r\n                            <label htmlFor=\"status\">Status</label>\r\n                            <input id = \"status\" type=\"text\" onChange={(e) =>{\r\n                                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\r\n                            }}/>\r\n                        </div>\r\n                        <div className=\"inputs\">\r\n                            <label htmlFor=\"points\">Points</label>\r\n                            <input id = \"points\" type=\"text\" onChange={(e) =>{\r\n                                setInputValues(makeArrayOfInputs(e.currentTarget.id, e.currentTarget.value));\r\n                            }\r\n                            }/>\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <div className=\"button\"><button onClick={requestToServer}>Submit</button></div>\r\n                            <div className=\"button\"><button onClick={() => setModalActive(false)}>Cancel</button></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\nexport default StatusBoard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAO,oBAAoB;AAC3B,SAAQC,KAAK,QAAO,gBAAgB;AAAC;AAGrC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAE3B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAIV,QAAQ,CAAC,KAAK,CAAC;EACtD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,IAAIa,kBAAkB,GAAG,CAAC,CAAC;EAC3BC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACJ,WAAW,CAAC;EAEhCV,SAAS,CAAC,MAAM;IACbe,KAAK,CAAC,oCAAoC,CAAC,CACtCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKd,iBAAiB,CAACc,IAAI,CAAC,CAAC;IAC5CJ,KAAK,CAAC,kCAAkC,CAAC,CACpCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEV,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EACL,MAAMc,iBAAiB,GAAG,CAACC,EAAE,EAAEC,CAAC,KAAK;IACjCC,MAAM,CAACC,OAAO,CAACZ,kBAAkB,CAAC,CAACa,OAAO,CAAC,QAAkB;MAAA,IAAjB,CAACC,GAAG,EAAEC,KAAK,CAAC;MACpD,IAAGD,GAAG,KAAKL,EAAE,EACb;QACIM,KAAK,GAAGL,CAAC;MACb,CAAC,MACIC,MAAM,CAACK,cAAc,CAAChB,kBAAkB,EAAES,EAAE,EAAEC,CAAC,CAAC;IACzD,CAAC,CAAC;IACF,OAAOV,kBAAkB;EACzB,CAAC;EAEL,MAAMiB,eAAe,GAAInB,WAAW,IAAK;IACrCK,KAAK,CAAC,oCAAoC,EAAE;MACxCe,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACvB,WAAW;IAAC,CAAC,CAAC,CAClCM,IAAI,CAAEkB,QAAQ,IAAKA,QAAQ,CAAChB,IAAI,EAAE,CAAC;EACpC,CAAC;EAGT,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,wBACzB;MAAK,SAAS,EAAC,oBAAoB;MAAA,wBAC/B;QAAK,SAAS,EAAC,OAAO;QAAA,UAAEf,KAAK,CAACgC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO,eAC1C;QAAK,SAAS,EAAC,OAAO;QAAA,UAEdhC,KAAK,CAACiC,WAAW,CAACC,GAAG,CAAC,CAACC,QAAQ,EAACC,KAAK,kBACjC;UAAiB,SAAS,EAAC,MAAM;UAAA,uBAC7B;YAAK,GAAG,EAAG,QAAOD,QAAS,EAAE;YAAC,GAAG,EAAC;UAAK;YAAA;YAAA;YAAA;UAAA;QAAE,GADnCC,KAAK;UAAA;UAAA;UAAA;QAAA,QAGlB;MACR;QAAA;QAAA;QAAA;MAAA,QACK;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAK,SAAS,EAAC,OAAO;MAAA,uBAClB;QAAK,SAAS,EAAC,eAAe;QAAA,wBAC1B;UAAK,SAAS,EAAC,YAAY;UAAA,uBACvB;YAAA,uBACI;cAAA,UACCjC,IAAI,CAAC+B,GAAG,CAAC,QAAsBE,KAAK;gBAAA,IAA1B;kBAACC,OAAO;kBAAEF;gBAAQ,CAAC;gBAAA,oBAC1B;kBAAA,wBACI;oBAAA,uBAAI;sBAAK,SAAS,EAAC,UAAU;sBAAA,uBAAC;wBAAO,IAAI,EAAC;sBAAU;wBAAA;wBAAA;wBAAA;sBAAA;oBAAE;sBAAA;sBAAA;sBAAA;oBAAA;kBAAM;oBAAA;oBAAA;oBAAA;kBAAA,QAAK,eACjE;oBAAA,uBAAI;sBAAK,SAAS,EAAC,YAAY;sBAAA,wBAC3B;wBAAK,SAAS,EAAC,SAAS;wBAAC,GAAG,EAAEE,OAAQ;wBAAC,GAAG,EAAC;sBAAE;wBAAA;wBAAA;wBAAA;sBAAA,QAAE,eAC/C;wBAAK,SAAS,EAAC,SAAS;wBAAC,GAAG,EAAEF,QAAS;wBAAC,GAAG,EAAC;sBAAE;wBAAA;wBAAA;wBAAA;sBAAA,QAAE;oBAAA;sBAAA;sBAAA;sBAAA;oBAAA;kBAC9C;oBAAA;oBAAA;oBAAA;kBAAA,QAAK;gBAAA,GALNC,KAAK;kBAAA;kBAAA;kBAAA;gBAAA,QAMT;cAAA,CACR;YAAC;cAAA;cAAA;cAAA;YAAA;UACM;YAAA;YAAA;YAAA;UAAA;QACJ;UAAA;UAAA;UAAA;QAAA,QACN,eACN;UAAK,SAAS,EAAC,YAAY;UAAA,uBACvB;YAAA,wBACI;cAAA,uBACA;gBAAA,UACKnC,cAAc,CAACiC,GAAG,CAAC,QAAiBE,KAAK;kBAAA,IAArB;oBAACJ,KAAK;oBAAEM;kBAAM,CAAC;kBAAA,oBAChC;oBAAI,SAAS,EAAC,aAAa;oBAAA,WAAcN,KAAK,eAC1C;sBAAM,SAAS,EAAC,QAAQ;sBAAA,uBAAC;wBAAK,GAAG,EAAEM,MAAO;wBAAC,GAAG,EAAC;sBAAE;wBAAA;wBAAA;wBAAA;sBAAA;oBAAE;sBAAA;sBAAA;sBAAA;oBAAA,QAAO;kBAAA,GAD7BF,KAAK;oBAAA;oBAAA;oBAAA;kBAAA,QAEjC;gBAAA,CACR;cAAC;gBAAA;gBAAA;gBAAA;cAAA;YACD;cAAA;cAAA;cAAA;YAAA,QACG,eACR;cAAA,UACKjC,IAAI,CAAC+B,GAAG,CAAC,QAA+CE,KAAK;gBAAA,IAAnD;kBAACG,OAAO;kBAAEC,QAAQ;kBAAEC,QAAQ;kBAAEC,MAAM;kBAAEC;gBAAM,CAAC;gBAAA,oBACpD;kBAAA,wBACI;oBAAI,EAAE,EAAC,YAAY;oBAAA,UAAEJ;kBAAO;oBAAA;oBAAA;oBAAA;kBAAA,QAAM,eAClC;oBAAI,EAAE,EAAC,YAAY;oBAAA,UAAEC;kBAAQ;oBAAA;oBAAA;oBAAA;kBAAA,QAAM,eACnC;oBAAI,EAAE,EAAC,YAAY;oBAAA,UAAEC;kBAAQ;oBAAA;oBAAA;oBAAA;kBAAA,QAAM,eACnC;oBAAI,EAAE,EAAC,YAAY;oBAAA,UAAEC;kBAAM;oBAAA;oBAAA;oBAAA;kBAAA,QAAM,eACjC;oBAAI,EAAE,EAAC,YAAY;oBAAA,UAAEC;kBAAM;oBAAA;oBAAA;oBAAA;kBAAA,QAAM;gBAAA,GAL5BP,KAAK;kBAAA;kBAAA;kBAAA;gBAAA,QAMT;cAAA,CACR;YAAC;cAAA;cAAA;cAAA;YAAA,QACE;UAAA;YAAA;YAAA;YAAA;UAAA;QACJ;UAAA;UAAA;UAAA;QAAA,QACN,eACN;UAAK,SAAS,EAAC,QAAQ;UAAA,uBACnB;YAAA,uBACI;cAAA,UACKjC,IAAI,CAAC+B,GAAG,CAAC,QAAWE,KAAK;gBAAA,IAAf;kBAACQ;gBAAM,CAAC;gBAAA,oBACf;kBAAA,uBACI;oBAAI,EAAE,EAAC,cAAc;oBAAA,uBACjB;sBAAK,GAAG,EAAEA,MAAO;sBAAC,GAAG,EAAC;oBAAE;sBAAA;sBAAA;sBAAA;oBAAA;kBAAE;oBAAA;oBAAA;oBAAA;kBAAA;gBACzB,GAHAR,KAAK;kBAAA;kBAAA;kBAAA;gBAAA,QAIT;cAAA,CACR;YAAC;cAAA;cAAA;cAAA;YAAA;UACE;YAAA;YAAA;YAAA;UAAA;QACJ;UAAA;UAAA;UAAA;QAAA,QACN;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACJ,eACN;MAAQ,OAAO,EAAE,MAAM9B,cAAc,CAAC,IAAI,CAAE;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAS,eAClE,QAAC,KAAK;MAAC,MAAM,EAAED,WAAY;MAAC,SAAS,EAAEC,cAAe;MAAA,uBAClD;QAAK,SAAS,EAAC,WAAW;QAAA,wBACtB;UAAK,SAAS,EAAC,UAAU;UAAA,uBACrB;YAAK,SAAS,EAAC,eAAe;YAAC,OAAO,EAAE,MAAMA,cAAc,CAAC,KAAK,CAAE;YAAA,uBAChE;cAAK,GAAG,EAAC,mBAAmB;cAAC,GAAG,EAAC;YAAE;cAAA;cAAA;cAAA;YAAA;UAAE;YAAA;YAAA;YAAA;UAAA;QACnC;UAAA;UAAA;UAAA;QAAA,QACJ,eACN;UAAK,SAAS,EAAC,SAAS;UAAA,wBACpB;YAAK,SAAS,EAAC,QAAQ;YAAA,wBACnB;cAAO,OAAO,EAAC,SAAS;cAAA,UAAC;YAAO;cAAA;cAAA;cAAA;YAAA,QAAQ,eACxC;cAAO,EAAE,EAAG,SAAS;cAAC,IAAI,EAAC,MAAM;cAAC,QAAQ,EAAGuC,CAAC,IAAI;gBAC9CrC,cAAc,CAACS,iBAAiB,CAAC4B,CAAC,CAACC,aAAa,CAAC5B,EAAE,EAAE2B,CAAC,CAACC,aAAa,CAACtB,KAAK,CAAC,CAAC;cAChF;YACC;cAAA;cAAA;cAAA;YAAA,QAAE;UAAA;YAAA;YAAA;YAAA;UAAA,QACD,eACN;YAAK,SAAS,EAAC,QAAQ;YAAA,wBACnB;cAAO,OAAO,EAAC,UAAU;cAAA,UAAC;YAAI;cAAA;cAAA;cAAA;YAAA,QAAQ,eACtC;cAAO,EAAE,EAAG,UAAU;cAAC,IAAI,EAAC,MAAM;cAAC,QAAQ,EAAGqB,CAAC,IAAI;gBAC/CrC,cAAc,CAACS,iBAAiB,CAAC4B,CAAC,CAACC,aAAa,CAAC5B,EAAE,EAAE2B,CAAC,CAACC,aAAa,CAACtB,KAAK,CAAC,CAAC;cAChF;YACC;cAAA;cAAA;cAAA;YAAA,QAAE;UAAA;YAAA;YAAA;YAAA;UAAA,QACD,eACN;YAAK,SAAS,EAAC,QAAQ;YAAA,wBACnB;cAAO,OAAO,EAAC,SAAS;cAAA,UAAC;YAAO;cAAA;cAAA;cAAA;YAAA,QAAQ,eACxC;cAAO,EAAE,EAAG,SAAS;cAAC,IAAI,EAAC,MAAM;cAAC,QAAQ,EAAGqB,CAAC,IAAI;gBAC9CrC,cAAc,CAACS,iBAAiB,CAAC4B,CAAC,CAACC,aAAa,CAAC5B,EAAE,EAAE2B,CAAC,CAACC,aAAa,CAACtB,KAAK,CAAC,CAAC;cAChF;YACC;cAAA;cAAA;cAAA;YAAA,QAAE;UAAA;YAAA;YAAA;YAAA;UAAA,QACD,eACN;YAAK,SAAS,EAAC,QAAQ;YAAA,wBACnB;cAAO,OAAO,EAAC,UAAU;cAAA,UAAC;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAQ,eAC1C;cAAO,EAAE,EAAG,UAAU;cAAC,IAAI,EAAC,MAAM;cAAC,QAAQ,EAAGqB,CAAC,IAAI;gBAC/CrC,cAAc,CAACS,iBAAiB,CAAC4B,CAAC,CAACC,aAAa,CAAC5B,EAAE,EAAE2B,CAAC,CAACC,aAAa,CAACtB,KAAK,CAAC,CAAC;cAChF;YAAE;cAAA;cAAA;cAAA;YAAA,QAAE;UAAA;YAAA;YAAA;YAAA;UAAA,QACF,eACN;YAAK,SAAS,EAAC,QAAQ;YAAA,wBACnB;cAAO,OAAO,EAAC,UAAU;cAAA,UAAC;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAQ,eAC1C;cAAO,EAAE,EAAG,UAAU;cAAC,IAAI,EAAC,MAAM;cAAC,QAAQ,EAAGqB,CAAC,IAAI;gBAC/CrC,cAAc,CAACS,iBAAiB,CAAC4B,CAAC,CAACC,aAAa,CAAC5B,EAAE,EAAE2B,CAAC,CAACC,aAAa,CAACtB,KAAK,CAAC,CAAC;cAChF;YAAE;cAAA;cAAA;cAAA;YAAA,QAAE;UAAA;YAAA;YAAA;YAAA;UAAA,QACF,eACN;YAAK,SAAS,EAAC,QAAQ;YAAA,wBACnB;cAAO,OAAO,EAAC,QAAQ;cAAA,UAAC;YAAO;cAAA;cAAA;cAAA;YAAA,QAAQ,eACvC;cAAO,EAAE,EAAG,QAAQ;cAAC,IAAI,EAAC,MAAM;cAAC,QAAQ,EAAGqB,CAAC,IAAI;gBAC7CrC,cAAc,CAACS,iBAAiB,CAAC4B,CAAC,CAACC,aAAa,CAAC5B,EAAE,EAAE2B,CAAC,CAACC,aAAa,CAACtB,KAAK,CAAC,CAAC;cAChF;YAAE;cAAA;cAAA;cAAA;YAAA,QAAE;UAAA;YAAA;YAAA;YAAA;UAAA,QACF,eACN;YAAK,SAAS,EAAC,QAAQ;YAAA,wBACnB;cAAO,OAAO,EAAC,QAAQ;cAAA,UAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAQ,eACtC;cAAO,EAAE,EAAG,QAAQ;cAAC,IAAI,EAAC,MAAM;cAAC,QAAQ,EAAGqB,CAAC,IAAI;gBAC7CrC,cAAc,CAACS,iBAAiB,CAAC4B,CAAC,CAACC,aAAa,CAAC5B,EAAE,EAAE2B,CAAC,CAACC,aAAa,CAACtB,KAAK,CAAC,CAAC;cAChF;YAAE;cAAA;cAAA;cAAA;YAAA,QAAE;UAAA;YAAA;YAAA;YAAA;UAAA,QACF,eACN;YAAK,SAAS,EAAC,QAAQ;YAAA,wBACnB;cAAO,OAAO,EAAC,QAAQ;cAAA,UAAC;YAAM;cAAA;cAAA;cAAA;YAAA,QAAQ,eACtC;cAAO,EAAE,EAAG,QAAQ;cAAC,IAAI,EAAC,MAAM;cAAC,QAAQ,EAAGqB,CAAC,IAAI;gBAC7CrC,cAAc,CAACS,iBAAiB,CAAC4B,CAAC,CAACC,aAAa,CAAC5B,EAAE,EAAE2B,CAAC,CAACC,aAAa,CAACtB,KAAK,CAAC,CAAC;cAChF;YACC;cAAA;cAAA;cAAA;YAAA,QAAE;UAAA;YAAA;YAAA;YAAA;UAAA,QACD,eACN;YAAK,SAAS,EAAC,SAAS;YAAA,wBACpB;cAAK,SAAS,EAAC,QAAQ;cAAA,uBAAC;gBAAQ,OAAO,EAAEE,eAAgB;gBAAA,UAAC;cAAM;gBAAA;gBAAA;gBAAA;cAAA;YAAS;cAAA;cAAA;cAAA;YAAA,QAAM,eAC/E;cAAK,SAAS,EAAC,QAAQ;cAAA,uBAAC;gBAAQ,OAAO,EAAE,MAAMpB,cAAc,CAAC,KAAK,CAAE;gBAAA,UAAC;cAAM;gBAAA;gBAAA;gBAAA;cAAA;YAAS;cAAA;cAAA;cAAA;YAAA,QAAM;UAAA;YAAA;YAAA;YAAA;UAAA,QACzF;QAAA;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEd,CAAC;AAAA,GAhLKP,WAAW;AAAA,KAAXA,WAAW;AAiLjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}